name: release-linux

on:
  push:
    tags:
      - "v*"

jobs:
  xmake-build:
    runs-on: ubuntu-20.04

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup GCC
        uses: egor-tensin/setup-gcc@v1
        with:
          version: 13

      - name: Set XMAKE_GLOBALDIR
        run: echo "XMAKE_GLOBALDIR=${{ runner.workspace }}/xmake-global" >> $GITHUB_ENV

      - name: Install Xmake
        uses: xmake-io/github-action-setup-xmake@v1
        with:
          xmake-version: latest
          actions-cache-folder: ".xmake-cache"

      - name: Update Xmake repo
        run: xmake repo --update

      - name: Cache packages from Xrepo
        uses: actions/cache@v3
        with:
          path: ${{ env.XMAKE_GLOBALDIR }}/.xmake/packages
          key: ${{ runner.os }}-xrepo-${{ hashFiles('**/xmake.lua') }}

      - name: Download packages
        run: xmake config -y --toolchain=gcc-13

      - name: Xmake build
        run: |
          xmake config -y --mode=release --toolchain=gcc-13 --ldflags="-static-libstdc++ -static-libgcc"
          xmake build

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: build-xmake-main
          path: build/linux/x86_64/release/main
          overwrite: true
          compression-level: 0

  pnpm-build:
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: ./web

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: latest
          run_install: false

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: "pnpm"
          cache-dependency-path: "./web/pnpm-lock.yaml"

      - name: Install dependencies
        run: pnpm install

      - name: Build
        run: pnpm build

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: build-pnpm-dist
          path: ./web/dist
          overwrite: true

  package-tar-gz:
    runs-on: ubuntu-latest

    needs:
      - xmake-build
      - pnpm-build

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set package info
        run: |
          echo "PACKAGE_VERSION=${{ github.ref_name }}" >> $GITHUB_ENV
          echo "PACKAGE_ARCH=amd64" >> $GITHUB_ENV

      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          path: ./yt-dlp-web
          pattern: build*

      - name: Organize file structure
        run: |
          cd yt-dlp-web

          mv build-pnpm-dist server
          mv build-xmake-main/main main
          rmdir build-xmake-main
          chmod +x main

      - name: Show file structure
        run: tree yt-dlp-web

      - name: Compression
        run: tar -czvf yt-dlp-web_linux_${PACKAGE_VERSION}_${PACKAGE_ARCH}.tar.gz yt-dlp-web

      - name: Upload tar.gz
        uses: actions/upload-artifact@v4
        with:
          name: linux-tar-gz
          path: ./yt-dlp-web_linux_${{ env.PACKAGE_VERSION }}_${{ env.PACKAGE_ARCH }}.tar.gz
          overwrite: true

  package-deb:
    runs-on: ubuntu-latest

    needs:
      - xmake-build
      - pnpm-build

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set package info
        run: |
          echo "PACKAGE_VERSION=${{ github.ref_name }}" >> $GITHUB_ENV
          echo "PACKAGE_ARCH=amd64" >> $GITHUB_ENV

      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          path: ./DEB
          pattern: build*

      - name: Organize file structure
        run: |
          cd DEB

          mkdir -p opt/yt-dlp-web
          mv build-pnpm-dist opt/yt-dlp-web/server
          mv build-xmake-main/main opt/yt-dlp-web/main
          rmdir build-xmake-main
          chmod +x opt/yt-dlp-web/main

          mkdir -p usr/bin
          ln -s ../../opt/yt-dlp-web/main usr/bin/yt-dlp-web

      - name: Write package info
        run: |
          cd DEB

          mkdir DEBIAN

          cat >DEBIAN/control <<EOF
          Package: yt-dlp-web
          Version: ${PACKAGE_VERSION#v}
          Section: utils
          Priority: optional
          Architecture: ${PACKAGE_ARCH}
          Depends: libwebkit2gtk-4.1-0 | libwebkit2gtk-4.0-37
          Maintainer: SuniRein <sunirein@qq.com>
          Description: A simple web interface for yt-dlp.
          Source: https://github.com/SuniRein/yt-dlp-web
          EOF

      - name: Write desktop file
        run: |
          cd DEB

          mkdir -p usr/share/applications

          cat >usr/share/applications/yt-dlp-web.desktop <<EOF
          [Desktop Entry]
          Name=yt-dlp-web
          Exec=/opt/yt-dlp-web/main
          Icon=yt-dlp-web
          Type=Application
          Categories=Network
          EOF

      - name: Show file structure
        run: tree DEB

      - name: Build deb
        run: dpkg -b DEB yt-dlp-web_linux_${PACKAGE_VERSION}_${PACKAGE_ARCH}.deb

      - name: Upload deb
        uses: actions/upload-artifact@v4
        with:
          name: linux-deb
          path: ./yt-dlp-web_linux_${{ env.PACKAGE_VERSION }}_${{ env.PACKAGE_ARCH }}.deb
          overwrite: true

  release:
    runs-on: ubuntu-latest

    needs:
      - package-tar-gz
      - package-deb

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Make release directory
        run: mkdir release -p

      - name: Download linux deb
        uses: actions/download-artifact@v4
        with:
          name: linux-deb
          path: linux-deb
      - name: List files in linux deb
        run: ls -l linux-deb
      - name: Copy linux deb to release
        run: cp linux-deb/* release

      - name: Download linux tar.gz
        uses: actions/download-artifact@v4
        with:
          name: linux-tar-gz
          path: linux-tar-gz
      - name: List files in linux tar.gz
        run: ls -l linux-tar-gz
      - name: Copy linux tar.gz to release
        run: cp linux-tar-gz/* release

      - name: Create release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            release/yt-dlp-web_linux_*.deb
            release/yt-dlp-web_linux_*.tar.gz
